language: python

python:
  - 2.7

branches:
  only:
    - master
    - development

notifications:
  email:
    - janssen@physik.uni-bonn.de
    - pohl@physik.uni-bonn.de

# Setup miniconda with needed packages in a new virtual test-environment
before_install:
  - sudo add-apt-repository -y ppa:team-electronics/ppa
  - sudo apt-get update -qq
  - wget http://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh
  - chmod +x miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda2
  - export PATH="$HOME/miniconda2/bin:$PATH"
  - conda update conda --yes
  - conda config --add channels silab
  - conda info -a
  - conda create --yes -n test-environment bitarray cython ipython matplotlib mock nose numba numpy pyserial pytables pyyaml pyzmq scipy sphinx
  - source activate test-environment
  - pip install progressbar-latest pyvisa pyvisa-py git+https://github.com/pyqtgraph/pyqtgraph.git@pyqtgraph-0.10.0 #git+https://github.com/uvemas/ViTables@develop
  - git clone https://github.com/potentialventures/cocotb
  - export COCOTB=$(pwd)/cocotb
  - rm -f /home/travis/miniconda2/envs/test-environment/lib/libreadline.so.6

# Install pybar with needed packages
install:
  - pip install pyusb
  - pip install pySiLibUSB
  - if [ "$TRAVIS_BRANCH" == "master" ]; then pip install git+https://github.com/SiLab-Bonn/basil@development git+https://github.com/SiLab-Bonn/pyBAR_fei4_interpreter@1.2.1 pixel_clusterizer==3; fi
  - if [ "$TRAVIS_BRANCH" == "development" ]; then pip install git+https://github.com/SiLab-Bonn/basil@development git+https://github.com/SiLab-Bonn/pyBAR_fei4_interpreter@1.3.0 pixel_clusterizer==3; fi
  - sudo apt-get install -qq iverilog-daily
#  Build iverilog from source
#  - sudo apt-get install gperf
#  - wget -O iverilog-master.zip  https://github.com/steveicarus/iverilog/archive/master.zip
#  - unzip iverilog-master.zip
#  - cd iverilog-master && autoconf && ./configure && make && sudo make install && cd ..
  # Install pybar
  - python setup.py develop

# Unit tests
script:
- cd pybar/testing; nosetests test_analysis.py test_interface.py # --logging-level=INFO
